# schema dynamically created by setup.js on 2019-11-04T19:39:17.705Z

type Node {
  id: ID!
  latitude: String
  longitude: String
  name: String
}

input NodeInput {
  id: ID!
  latitude: String
  longitude: String
  name: String
}

type Edge {
  startTime: String
  stopTime: String
  bikeID: String
  userType: String
  birthYear: String
  gender: String
  startNode: Node
  stopNode: Node
}

type NodeUpdateResponse {
  success: Boolean!
  message: String
  node: Node
}

type EdgeUpdateResponse {
  success: Boolean!
  message: String
  edge: Edge
}

type Query {
  Node(id: ID, latitude: String, longitude: String, name: String): [Node]
  Edge(
    startNode: NodeInput
    stopNode: NodeInput
    startTime: String
    stopTime: String
    bikeID: String
    userType: String
    birthYear: String
    gender: String
  ): [Edge]
}

type Mutation {
  CreateNode(id: ID!, latitude: String, longitude: String, name: String): NodeUpdateResponse
  UpdateNode(id: ID!, latitude: String, longitude: String, name: String): NodeUpdateResponse
  DeleteNode(id: ID!): NodeUpdateResponse

  CreateEdge(startNode: NodeInput, stopNode: NodeInput, startTime: String, stopTime: String): Edge
  DeleteEdge(id: ID!): EdgeUpdateResponse
}
